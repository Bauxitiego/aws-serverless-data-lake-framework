AWSTemplateFormatVersion: 2010-09-09
Description: Team repositories cross-account role

Parameters:
  pChildAccountId:
    Description: Child AWS account ID
    Type: String
    AllowedPattern: (\d{12}|^$)
    ConstraintDescription: Must be an AWS account ID
  pDomain:
    Description: Name of the data domain (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,9}"
    Default: datalake
  pEnvironment:
    Description: Environment name
    Type: String
    AllowedValues: [dev, test, prod]
    Default: dev
  pTeamName:
    Description: Team name
    Type: String

Mappings:
  pCodeCommitBranch:
    dev:
      branch: dev
    test:
      branch: test
    prod:
      branch: master

Conditions:
  CrossAccount: !Not [!Equals [!Ref pChildAccountId, !Ref "AWS::AccountId"]]
  IsProduction: !Equals
    - !Ref pEnvironment
    - "prod"

Resources:
  rMainCodeCommit:
    Type: AWS::CodeCommit::Repository
    Properties:
#      Code:
#        S3:
#          Bucket:
#          Key: zip
      RepositoryDescription: !Sub ${pDomain} ${pTeamName} main repository
      RepositoryName: !Sub sdlf-${pDomain}-${pTeamName}-main

  rCodeCommitRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: W11
            reason: The actions with "*" are all ones that do not have resource limitations associated with them
    Properties:
      Description: Role assumed by CodeBuild/CodePipeline in child AWS account
      Path: /
      RoleName: !Sub sdlf-cicd-team-codecommit-${pDomain}-${pEnvironment}-${pTeamName}
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub arn:${AWS::Partition}:iam::${pChildAccountId}:root
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codecommit:CreateApprovalRuleTemplate # W11 exception
                  - codecommit:DeleteApprovalRuleTemplate # W11 exception
                  - codecommit:GetApprovalRuleTemplate # W11 exception
                  - codecommit:ListApprovalRuleTemplates # W11 exception
                  - codecommit:ListRepositories # W11 exception
                  - codecommit:ListRepositoriesForApprovalRuleTemplate # W11 exception
                  - codecommit:UpdateApprovalRuleTemplateContent # W11 exception
                  - codecommit:UpdateApprovalRuleTemplateDescription # W11 exception
                  - codecommit:UpdateApprovalRuleTemplateName # W11 exception
                Resource: "*"
              - Effect: Allow
                Action:
                  - codecommit:Get*
                  - codecommit:Describe*
                  - codecommit:List*
                  - codecommit:GitPull
                  - codecommit:CancelUploadArchive
                  - codecommit:GetBranch
                  - codecommit:GetCommit
                  - codecommit:GetUploadArchiveStatus
                  - codecommit:UploadArchive
                Resource:
                  - !Sub arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - s3:Get*
                  - s3:ListBucket*
                  - s3:Put*
                Resource:
                  - !Sub arn:${AWS::Partition}:s3:::sdlf-cfn-artifacts-${AWS::Region}-${pChildAccountId}
                  - !Sub arn:${AWS::Partition}:s3:::sdlf-cfn-artifacts-${AWS::Region}-${pChildAccountId}/*
              - Effect: Allow
                Action:
                  - kms:Encrypt
                  - kms:Decrypt
                  - kms:ReEncrypt*
                  - kms:GenerateDataKey*
                  - kms:DescribeKey
                  - kms:List*
                  - kms:Describe*
                Resource: !Sub arn:${AWS::Partition}:kms:${AWS::Region}:${pChildAccountId}:key/*
                Condition:
                  ForAllValues:StringLike:
                    aws:PrincipalArn: !Sub "*${pTeamName}*"

  rCodeCommitTriggerRule:
    Condition: CrossAccount
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sdlf-cicd-team-codecommit-${pDomain}-${pEnvironment}-${pTeamName}
      EventPattern: !Sub
        - |-
          {
            "detail-type": [
              "CodeCommit Repository State Change"
            ],
            "resources": [
              "${rMainCodeCommit.Arn}",
            ],
            "source": [
              "aws.codecommit"
            ],
            "detail": {
              "referenceType": [
                "branch"
              ],
              "event": [
                "referenceCreated",
                "referenceUpdated"
              ],
              "referenceName": [
                {"prefix":"${cBranch}"}
              ]
            }
          }
        - { cBranch: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch] }
      State: ENABLED
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${pChildAccountId}:event-bus/default
          Id: !Sub sdlf-cicd-team-codecommit-${pDomain}-${pEnvironment}-${pTeamName}
          RoleArn: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-foundations-eventbus-${pDomain}-${pEnvironment}

  rPullRequestCreated:
    Condition: IsProduction
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sdlf-cicd-team-codecommit-pr-${pDomain}-${pEnvironment}-${pTeamName}
      Description: !Sub Notify ${pDomain} ${pTeamName} team of newly created pull request
      EventPattern: !Sub
        - |-
          {
            "detail-type": [
              "CodeCommit Pull Request State Change"
            ],
            "resources": [
              "${rMainCodeCommit.Arn}",
            ],
            "source": [
              "aws.codecommit"
            ],
            "detail": {
              "destinationReference": [
                {"prefix":"refs/heads/${cBranch}"},
                {"prefix":"${cBranch}"}
              ],
              "event": [
                "pullRequestCreated"
              ]
            }
          }
        - { cBranch: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch] }
      State: ENABLED
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${pChildAccountId}:event-bus/default
          Id: !Sub sdlf-cicd-team-codecommit-pr-${pDomain}-${pEnvironment}-${pTeamName}
          RoleArn: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-foundations-eventbus-${pDomain}-${pEnvironment}

  rStagesCodeCommitTriggerRule:
    Condition: CrossAccount
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub sdlf-cicd-team-codecommit-stages-${pDomain}-${pEnvironment}-${pTeamName}
      EventPattern: !Sub
        - |-
          {
            "detail-type": [
              "CodeCommit Repository State Change"
            ],
            "resources": [
              arn:${AWS::Partition}:codecommit:${AWS::Region}:${AWS::AccountId}:sdlf-${pDomain}-${pTeamName}-stage-*",
            ],
            "source": [
              "aws.codecommit"
            ],
            "detail": {
              "referenceType": [
                "branch"
              ],
              "event": [
                "referenceCreated",
                "referenceUpdated"
              ],
              "referenceName": [
                {"prefix":"${cBranch}"}
              ]
            }
          }
        - { cBranch: !FindInMap [pCodeCommitBranch, !Ref pEnvironment, branch] }
      State: ENABLED
      Targets:
        - Arn: !Sub arn:${AWS::Partition}:events:${AWS::Region}:${pChildAccountId}:event-bus/default
          Id: !Sub sdlf-cicd-team-codecommit-stages-${pDomain}-${pEnvironment}-${pTeamName}
          RoleArn: !Sub arn:${AWS::Partition}:iam::${AWS::AccountId}:role/sdlf-cicd-foundations-eventbus-${pDomain}-${pEnvironment}
