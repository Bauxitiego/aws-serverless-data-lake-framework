AWSTemplateFormatVersion: "2010-09-09"
Description: Resources to be created by the common stack

Parameters:
  pApplicationName:
    Description: Name of the application (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,8}"
    Default: datalake
  pCustomBucketPrefix:
    Description: S3 Bucket Prefix if different from default. Must be a valid S3 Bucket name
    Type: String
    Default: sdlf
  pDataLakeAdminRoleArn:
    Description: Lake Formation Admin Role Arn
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/IAM/DataLakeAdminRoleArn
  pEnvironment:
    Description: Environment name
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/Misc/pEnv
  pNumBuckets:
    Description: Number of data lake buckets (3 or 1)
    Default: "3"
    Type: String
    AllowedValues: ["3", "1"]
    ConstraintDescription: Must specify 3 or 1
  pOrganizationName:
    Description: Name of the organization (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,9}"
  pCloudWatchLogsRetentionInDays:
    Description: The number of days log events are kept in CloudWatch Logs
    Type: Number
    Default: 30
    AllowedValues:
      [
        1,
        3,
        5,
        7,
        14,
        30,
        60,
        90,
        120,
        150,
        180,
        365,
        400,
        545,
        731,
        1827,
        3653,
      ]
  pCFNBucket:
    Description: The CloudFormation bucket for the solution
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/S3/CFNBucket
  pDatalakeLibraryRepositoryName:
    Description: Name of the repository containing the code for the Datalake Library.
    Type: String
    Default: sdlf-datalakeLibrary
  pDatalakeLibsLambdaLayerName:
    Description: Name to give the Lambda Layer containing the Datalake Library.
    Type: String
    Default: datalake-lib-layer
  pDefaultPipLibrariesLambdaLayerName:
    Description: Name to give the Lambda Layer containing the libraries installed through Pip.
    Type: String
    Default: default-pip-libraries
  pLibrariesBranchName:
    Description: Name of the default branch for Python libraries
    Type: String
    Default: master
  pMinTestCoverage:
    Description: "[OPTIONAL] The minimum code coverage percentage that is required for the pipeline to proceed to the next stage. Specify only if `pEnforceCodeCoverage` is set to 'true'."
    Type: String
    Default: 80
  pPipLibrariesRepositoryName:
    Description: The repository containing requirements.txt
    Type: String
    Default: sdlf-pipLibrary
  pRunCodeCoverage:
    Description: "Creates code coverage reports from the unit tests included in `pDatalakeLibraryRepositoryName`. Enforces the minimum threshold specified in `pMinTestCoverage`"
    Type: String
    AllowedValues: ["false", "true"]
    Default: "false"
  pSNSNotificationsEmail:
    Description: Email address for SNS notifications
    Type: String
    Default: nobody@amazon.com
  pSharedDevOpsAccountId:
    Description: Shared DevOps Account Id
    Type: AWS::SSM::Parameter::Value<String>
    Default: /SDLF/Misc/DevOpsAccountId
  pTeamName:
    Description: Name of the team (all lowercase, no symbols or spaces)
    Type: String
    AllowedPattern: "[a-z0-9]{2,12}"
    Default: data

Conditions:
  DefaultTeam: !Equals [!Ref pTeamName, "data"]

Resources:
  rRoleLambdaExecution:
    Type: AWS::IAM::Role
    Condition: DefaultTeam
    Properties:
      RoleName: sdlf-routing
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: sdlf-routing
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
              - Effect: Allow
                Action:
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/sdlf-*
              - Effect: Allow
                Action:
                  - sqs:DeleteMessage
                  - sqs:DeleteMessageBatch
                  - sqs:GetQueueAttributes
                  - sqs:GetQueueUrl
                  - sqs:ListQueues
                  - sqs:ListDeadLetterSourceQueues
                  - sqs:ListQueueTags
                  - sqs:ReceiveMessage
                  - sqs:SendMessage
                  - sqs:SendMessageBatch
                Resource:
                  - !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:sdlf-*
              - Effect: Allow
                Action:
                  - events:PutEvents
                Resource:
                  - !Sub arn:aws:events:${AWS::Region}:${AWS::AccountId}:event-bus/default
              - Effect: Allow
                Action:
                  - dynamodb:BatchGetItem
                  - dynamodb:BatchWriteItem
                  - dynamodb:DeleteItem
                  - dynamodb:DescribeTable
                  - dynamodb:GetItem
                  - dynamodb:GetRecords
                  - dynamodb:PutItem
                  - dynamodb:Query
                  - dynamodb:Scan
                  - dynamodb:UpdateItem
                Resource:
                  - !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/octagon-*

  ######## KMS #########
  rKMSStack:
    Type: awslabs::sdlf::teamkms::MODULE
    Properties:
      pEnvironment: !Ref pEnvironment
      pSharedDevOpsAccountId: !Ref pSharedDevOpsAccountId
      pTeamName: !Ref pTeamName
      pRoleLambdaExecutionArn: !If [DefaultTeam, !GetAtt rRoleLambdaExecution.Arn, "{{resolve:ssm:/SDLF/Misc/rRoleLambdaExecution:1}}"]

  rRoleLambdaExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Condition: DefaultTeam
    Properties:
      ManagedPolicyName: sdlf-routing-kms
      Roles:
        - sdlf-routing
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - kms:CreateGrant
              - kms:Decrypt
              - kms:DescribeKey
              - kms:Encrypt
              - kms:GenerateDataKey*
              - kms:ReEncrypt*
            Resource: !GetAtt rKMSStackrKMSInfraKey.Arn

  ######## S3 #########
  rS3Stack:
    Type: awslabs::sdlf::teams3::MODULE
    Condition: DefaultTeam
    DependsOn: rKMSStack
    Properties:
      pApplicationName: !Ref pApplicationName
      pCustomBucketPrefix: !Ref pCustomBucketPrefix
      pEnvironment: !Ref pEnvironment
      pKMSInfraKeyId: !GetAtt rKMSStackrKMSInfraKey.Arn
      pKMSDataKeyId: !GetAtt rKMSStackrKMSDataKey.Arn
      pNumBuckets: !Ref pNumBuckets
      pOrganizationName: !Ref pOrganizationName
      pCloudWatchLogsRetentionInDays: !Ref pCloudWatchLogsRetentionInDays
      pRoleLambdaExecutionArn: !GetAtt rRoleLambdaExecution.Arn

  ######## DYNAMODB #########
  rDynamoStack:
    Type: awslabs::sdlf::teamdynamo::MODULE
    Condition: DefaultTeam
    DependsOn: rS3Stack
    Properties:
      pEnvironment: !Ref pEnvironment
      pKMSKeyId: !GetAtt rKMSStackrKMSInfraKey.Arn

  ######## GLUE REPLICATION #########
  rGlueReplicationStack:
    Type: awslabs::sdlf::teamglue::MODULE
    Condition: DefaultTeam
    DependsOn: rDynamoStack
    Properties:
      pDataLakeAdminRoleArn: !Ref pDataLakeAdminRoleArn
      pEnvironment: !Ref pEnvironment
      pKMSKeyId: !GetAtt rKMSStackrKMSInfraKey.Arn
      pCloudWatchLogsRetentionInDays: !Ref pCloudWatchLogsRetentionInDays

  ######## IAM #########
  rIAMStack:
    Type: awslabs::sdlf::teamiam::MODULE
    Properties:
      pAnalyticsBucket: !Ref rS3StackrAnalyticsBucket
      pApplicationName: !Ref pApplicationName
      pCentralBucket: !Ref rS3StackrRawBucket
      pCFNBucket: !Ref pCFNBucket
      pEnvironment: !Ref pEnvironment
      pKMSInfraKeyId: !GetAtt rKMSStackrKMSInfraKey.Arn
      pKMSDataKeyId: !GetAtt rKMSStackrKMSDataKey.Arn
      pOrganizationName: !Ref pOrganizationName
      pPipelineBucket: !Ref rS3StackrArtifactsBucket
      pSharedDevOpsAccountId: !Ref pSharedDevOpsAccountId
      pStageBucket: !Ref rS3StackrStageBucket
      pTeamName: !Ref pTeamName

  ######## CICD #########
  rCICDStack:
    Type: awslabs::sdlf::teamcicd::MODULE
    Properties:
      pAnalyticsBucket: !Ref rS3StackrAnalyticsBucket
      pApplicationName: !Ref pApplicationName
      pCentralBucket: !Ref rS3StackrRawBucket
      pCFNBucket: !Ref pCFNBucket
      pCloudWatchRepositoryTriggerRoleArn: !GetAtt rIAMStackrCodeBuildPublishLayerRole.Arn
      pCodeBuildPublishLayerRoleArn: !GetAtt rIAMStackrCodeBuildPublishLayerRole.Arn
      pCICDCodeBuildRoleArn: !GetAtt rIAMStackrCICDCodeBuildRole.Arn
      pCodeBuildServiceRoleArn: !GetAtt rIAMStackrCodeBuildServiceRole.Arn
      pCodePipelineRoleArn: !GetAtt rIAMStackrCodePipelineRole.Arn
      pDatalakeLibraryRepositoryName: !Ref pDatalakeLibraryRepositoryName
      pDatalakeLibsLambdaLayerName: !Ref pDatalakeLibsLambdaLayerName
      pDefaultPipLibrariesLambdaLayerName: !Ref pDefaultPipLibrariesLambdaLayerName
      pEnvironment: !Ref pEnvironment
      pKMSInfraKeyId: !GetAtt rKMSStackrKMSInfraKey.Arn
      pLibrariesBranchName: !Ref pLibrariesBranchName
      pMinimumTestCoverage: !Ref pMinTestCoverage
      pOrganizationName: !Ref pOrganizationName
      pPipelineBucket: !Ref rS3StackrArtifactsBucket
      pPipLibrariesRepositoryName: !Ref pPipLibrariesRepositoryName
      pRunCodeCoverage: !Ref pRunCodeCoverage
      pSharedDevOpsAccountId: !Ref pSharedDevOpsAccountId
      pStageBucket: !Ref rS3StackrStageBucket
      pSNSNotificationsEmail: !Ref pSNSNotificationsEmail
      pTeamName: !Ref pTeamName
      pTransformValidateRoleArn: !GetAtt rIAMStackrTransformValidateRole.Arn

  ######## SSM OUTPUTS #########
  rOrganizationSsm:
    Type: AWS::SSM::Parameter
    Condition: DefaultTeam
    Properties:
      Name: /SDLF/Misc/pOrg
      Type: String
      Value: !Ref pOrganizationName
      Description: Name of the Organization owning the datalake
  rApplicationSsm:
    Type: AWS::SSM::Parameter
    Condition: DefaultTeam
    Properties:
      Name: /SDLF/Misc/pApp
      Type: String
      Value: !Ref pApplicationName
      Description: Name of the Application
  rRoleLambdaExecutionSsm:
    Type: AWS::SSM::Parameter
    Condition: DefaultTeam
    Properties:
      Name: /SDLF/Misc/rRoleLambdaExecution
      Type: String
      Value: !GetAtt rRoleLambdaExecution.Arn
      Description: sdlf-routing lambda role
